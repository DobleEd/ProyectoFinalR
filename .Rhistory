print(contrib_total)
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
select(Audio, Latitud, Longitud, Delta_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(Delta_Freq = as.numeric(Delta_Freq))
mapa_delta <- ggplot() +
geom_sf(data = world, fill = "lightgreen", color = "grey") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Delta_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Delta Frecuencia", option = "plasma", direction = -1) +
theme_minimal() +
labs(title = "Distribución Geográfica - Color por Delta Frecuencia",
subtitle = paste("Número de registros utilizados:", nrow(datos_mapa)),
x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "lightblue"),
panel.grid = element_line(color = "grey"),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
print(mapa_delta)
ggsave("mapa_delta_freq.png", mapa_delta, width = 12, height = 8, dpi = 300)
mapa_norte_america <- ggplot() +
geom_sf(data = world, fill = "#99CC66", color = "black") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Delta_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Delta Frecuencia", option = "plasma", direction = -1) +
coord_sf(xlim = c(-120, -30), ylim = c(-10, 35), expand = FALSE) +
theme_minimal() +
labs(title = "Distribución en América del Norte y Centro América - Color por Delta Frecuencia", subtitle = paste("Número de Registros:", nrow(datos_mapa)), x = "Longitud", y = "Latitud")
print(mapa_norte_america)
ggsave("mapa_norte_america.png", mapa_norte_america, width = 10, height = 8, dpi = 300)
pca_df_loc
ggplot(pca_df_loc)
mapa_con_relieve <- ggplot() +
geom_sf(data = world, fill = "#99CC66", color = "black") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Delta_Freq), size = 4, alpha = 0.9, shape = 19) +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud), size = 4.2, color = "white", shape = 1, stroke = 0.8) +
scale_color_viridis(name = "Delta Frecuencia (Hz)", option = "plasma", direction = -1) +
coord_sf(xlim = c(-120, -30), ylim = c(-10, 35), expand = FALSE) +
theme_void() +
labs(title = "Distribución Geográfica - Delta Frecuencia", subtitle = paste("Número de registros:", nrow(datos_mapa))) +
annotation_scale(location = "br", pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm")) +
annotation_north_arrow(location = "tr", pad_x = unit(0.5, "cm"), pad_y = unit(0.5, "cm")) +
theme( plot.background = element_rect(fill = "white", color = NA), panel.background = element_rect(fill = "#D4F1F9"), plot.title = element_text(face = "bold", hjust = 0.5, size = 16, margin = margin(b = 10)), plot.subtitle = element_text(hjust = 0.5, size = 12, margin = margin(b = 15)), plot.caption = element_text(hjust = 0.5, size = 10, margin = margin(t = 10)), legend.position = "right", legend.title = element_text(face = "bold") )
print(mapa_con_relieve)
ggsave("mapa_con_relieve.png", mapa_con_relieve, width = 12, height = 9, dpi = 300)
datos_afd <- promedios_audio %>% select(all_of(variables), Localidad) %>% # Variables + grupo de clasificación filter(!is.na(Localidad)) %>% # Eliminar NA en la variable grupo mutate(across(all_of(variables), as.numeric))
datos_afd <- datos_afd[complete.cases(datos_afd), ]
datos_afd <- promedios_audio %>%
select(all_of(variables), Localidad) %>%  +
filter(!is.na(Localidad)) %>%
mutate(across(all_of(variables), as.numeric))
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
library(MASS)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
datos_afd <- promedios_audio %>%
select(all_of(variables), Localidad) %>%  +
filter(!is.na(Localidad)) %>%
mutate(across(all_of(variables), as.numeric))
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
library(MASS)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos %>%
select(where(is.numeric)) %>%
names()
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
library(MASS)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
variables_numericas <- c(
"Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time",
"Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density"
)
variables_excluir <- c("Nota", "ID", "Begin_Time", "End_Time","Pais")
variables <- variables_numericas[
variables_numericas %in% names(promedios_audio) &
!variables_numericas %in% variables_excluir
]
print(variables)
promedios_audio <- datos_filtrados %>%
mutate(across(c( "Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time", "Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density", "Nota"), as.numeric)) %>%
group_by(Audio) %>%
summarise(across(c( "Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time", "Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density", "Nota"), ~ mean(., na.rm = TRUE)))
promedios_audio
datos_pca <- promedios_audio %>%
select(all_of(variables)) %>%
select(where(~ {
var_calculada <- var(., na.rm = TRUE)
!is.na(var_calculada) && var_calculada > 0
}))
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
library(MASS)
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
datos_afd <- promedios_audio %>%
select(all_of(variables), Localidad) %>%  +
filter(!is.na(Localidad)) %>%
mutate(across(all_of(variables), as.numeric))
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
library(MASS)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
select(where(is.numeric)) %>%
names()
columnas_numericas <- datos_filtrados %>%
dplyr::select(where(is.numeric)) %>%
names()
columnas_categoricas <- datos_filtrados %>%
dplyr::select(where(is.character)) %>%
names()
variables_numericas <- c(
"Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time",
"Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density"
)
variables_excluir <- c("Nota", "ID", "Begin_Time", "End_Time","Pais")
variables <- variables_numericas[
variables_numericas %in% names(promedios_audio) &
!variables_numericas %in% variables_excluir
]
variables_numericas <- c(
"Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time",
"Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density"
)
variables_excluir <- c("Nota", "ID", "Begin_Time", "End_Time","Pais")
variables <- variables_numericas[
variables_numericas %in% names(promedios_audio) &
!variables_numericas %in% variables_excluir
]
library(readxl)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(writexl)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(viridis)
library(ggspatial)
archivo_excel <- "tablas_apiladas.xlsx"
datos <- read_excel(archivo_excel, sheet = 1)
datos_filtrados <- datos %>%
filter(Nota != "Completo")
columnas_numericas <- datos_filtrados %>%
dplyr::select(where(is.numeric)) %>%
names()
columnas_categoricas <- datos_filtrados %>%
dplyr::select(where(is.character)) %>%
names()
promedios_audio <- datos_filtrados %>%
mutate(across(c( "Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time", "Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density", "Nota"), as.numeric)) %>%
group_by(Audio) %>%
summarise(across(c( "Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time", "Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density", "Nota"), ~ mean(., na.rm = TRUE)))
promedios_audio
variables_numericas <- c(
"Low_Freq", "High_Freq", "Max_Freq", "Max_Amp", "Peak_Freq", "Delta_Time",
"Min_Amp", "Peak_Time", "Length_frames", "Delta_Freq", "Avg_Power_Density"
)
variables_excluir <- c("Nota", "ID", "Begin_Time", "End_Time","Pais")
variables <- variables_numericas[
variables_numericas %in% names(promedios_audio) &
!variables_numericas %in% variables_excluir
]
print(variables)
datos_pca <- promedios_audio %>%
select(all_of(variables)) %>%
select(where(~ {
var_calculada <- var(., na.rm = TRUE)
!is.na(var_calculada) && var_calculada > 0
}))
datos_pca <- promedios_audio %>%
select(all_of(variables)) %>%
dplyr::select(where(~ {
var_calculada <- var(., na.rm = TRUE)
!is.na(var_calculada) && var_calculada > 0
}))
datos_pca <- promedios_audio %>%
dplyr::select(all_of(variables)) %>%
dplyr::select(where(~ {
var_calculada <- var(., na.rm = TRUE)
!is.na(var_calculada) && var_calculada > 0
}))
datos_pca_numeric <- as.data.frame(lapply(datos_pca, function(x) {
if (is.character(x) || is.factor(x)) {
as.numeric(as.character(x))
} else {
x
}
}))
PCA <- prcomp(datos_pca_numeric, scale = TRUE, center = TRUE)
PCA
pca_df <- as.data.frame(PCA$x) %>%
mutate(Audio = promedios_audio$Audio)
pca_df <- pca_df %>%
left_join(promedios_audio %>% select(Audio, any_of(columnas_categoricas)), by = "Audio")
pca_df <- as.data.frame(PCA$x) %>%
mutate(Audio = promedios_audio$Audio)
pca_df <- pca_df %>%
left_join(promedios_audio %>% dplyr::select(Audio, any_of(columnas_categoricas)), by = "Audio")
pca_df <- data.frame(PCA$x, Audio = promedios_audio$Audio) %>%
left_join(distinct(datos_filtrados, Audio, Pais), by = "Audio")
ggplot(pca_df, aes(x = PC1, y = PC2, color = Pais)) +
geom_point(size = 3) +
stat_ellipse(level = 0.95) +
theme_minimal() +
labs(title = "PCA - Agrupación por País",
x = paste("PC1 (", round(summary(pca_result)$importance[2,1]*100, 1), "%)"),
y = paste("PC2 (", round(summary(pca_result)$importance[2,2]*100, 1), "%)"))
pca_df <- data.frame(PCA$x, Audio = promedios_audio$Audio) %>%
left_join(distinct(datos_filtrados, Audio, Pais), by = "Audio")
ggplot(pca_df, aes(x = PC1, y = PC2, color = Pais)) +
geom_point(size = 3) +
stat_ellipse(level = 0.95) +
theme_minimal() +
labs(title = "PCA - Agrupación por País",
x = paste("PC1 (", round(summary(PCA)$importance[2,1]*100, 1), "%)"),
y = paste("PC2 (", round(summary(PCA)$importance[2,2]*100, 1), "%)"))
localidades_unicas <- datos_filtrados %>%
group_by(Audio) %>%
summarise(Localidad = first(Localidad))
pca_df_loc <- data.frame(PCA$x, Audio = promedios_audio$Audio) %>%
left_join(localidades_unicas, by = "Audio")
ggplot(pca_df_loc, aes(x = PC1, y = PC2, color = Localidad)) +
geom_point(size = 3) +
stat_ellipse(level = 0.95) +
theme_minimal() +
labs(title = "PCA - Agrupación por Localidad",
x = paste("PC1 (", round(summary(PCA)$importance[2,1]*100, 1), "%)"),
y = paste("PC2 (", round(summary(PCA)$importance[2,2]*100, 1), "%)"))
contrib_pc1 <- fviz_contrib(PCA, choice = "var", axes = 1, top = 15)
print(contrib_pc1)
contrib_pc2 <- fviz_contrib(PCA, choice = "var", axes = 2, top = 15)
print(contrib_pc2)
contrib_total <- fviz_contrib(PCA, choice = "var", axes = 1:2, top = 15)
print(contrib_total)
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
select(Audio, Latitud, Longitud, Max_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(MAx_Freq = as.numeric(MAx_Freq))
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
dplyr::select(Audio, Latitud, Longitud, Max_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(MAx_Freq = as.numeric(MAx_Freq))
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
dplyr::select(Audio, Latitud, Longitud, Max_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(MAx_Freq = as.numeric(Max_Freq))
mapa_delta <- ggplot() +
geom_sf(data = world, fill = "lightgreen", color = "grey") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Max_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Frecuencia máxima", option = "plasma", direction = -1) +
theme_minimal() +
labs(title = "Distribución Geográfica - Color por Delta Frecuencia",
subtitle = paste("Número de registros utilizados:", nrow(datos_mapa)),
x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "lightblue"),
panel.grid = element_line(color = "grey"),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
print(mapa_freqmax)
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
dplyr::select(Audio, Latitud, Longitud, Max_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(MAx_Freq = as.numeric(Max_Freq))
mapa_freqmax <- ggplot() +
geom_sf(data = world, fill = "lightgreen", color = "grey") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Max_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Frecuencia máxima", option = "plasma", direction = -1) +
theme_minimal() +
labs(title = "Distribución Geográfica - Color por Delta Frecuencia",
subtitle = paste("Número de registros utilizados:", nrow(datos_mapa)),
x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "lightblue"),
panel.grid = element_line(color = "grey"),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
print(mapa_freqmax)
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
dplyr::select(Audio, Latitud, Longitud, Max_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(MAx_Freq = as.numeric(Max_Freq))
mapa_freqmax <- ggplot() +
geom_sf(data = world, fill = "lightgreen", color = "grey") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Max_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Frecuencia máxima", option = "plasma", direction = -1) +
theme_minimal() +
labs(title = "Distribución Geográfica - Color por Delta Frecuencia",
subtitle = paste("Número de registros utilizados:", nrow(datos_mapa)),
x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "lightblue"),
panel.grid = element_line(color = "grey"),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
print(mapa_freqmax)
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
select(Audio, Latitud, Longitud, Delta_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(Delta_Freq = as.numeric(Delta_Freq))
world <- ne_countries(scale = "medium", returnclass = "sf")
datos_mapa <- pca_df %>%
left_join(datos_filtrados %>%
dplyr::select(Audio, Latitud, Longitud, Delta_Freq) %>%
distinct(Audio, .keep_all = TRUE),
by = "Audio") %>%
filter(!is.na(Latitud) & !is.na(Longitud)) %>%
mutate(Delta_Freq = as.numeric(Delta_Freq))
mapa_delta <- ggplot() +
geom_sf(data = world, fill = "lightgreen", color = "grey") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Delta_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Delta Frecuencia", option = "plasma", direction = -1) +
theme_minimal() +
labs(title = "Distribución Geográfica - Color por Delta Frecuencia",
subtitle = paste("Número de registros utilizados:", nrow(datos_mapa)),
x = "Longitud", y = "Latitud") +
theme(panel.background = element_rect(fill = "lightblue"),
panel.grid = element_line(color = "grey"),
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5))
print(mapa_delta)
ggsave("mapa_delta_freq.png", mapa_delta, width = 12, height = 8, dpi = 300)
mapa_norte_america <- ggplot() +
geom_sf(data = world, fill = "#99CC66", color = "black") +
geom_point(data = datos_mapa, aes(x = Longitud, y = Latitud, color = Delta_Freq), size = 4, alpha = 0.8, shape = 19) +
scale_color_viridis(name = "Delta Frecuencia", option = "plasma", direction = -1) +
coord_sf(xlim = c(-120, -30), ylim = c(-10, 35), expand = FALSE) +
theme_minimal() +
labs(title = "Distribución en América del Norte y Centro América - Color por Delta Frecuencia", subtitle = paste("Número de Registros:", nrow(datos_mapa)), x = "Longitud", y = "Latitud")
print(mapa_norte_america)
ggsave("mapa_norte_america.png", mapa_norte_america, width = 10, height = 8, dpi = 300)
localidades_unicas <- datos_filtrados %>%
group_by(Audio) %>%
summarise(Localidad = first(Localidad))
pca_df_loc <- data.frame(PCA$x, Audio = promedios_audio$Audio) %>%
left_join(localidades_unicas, by = "Audio")
ggplot(pca_df_loc, aes(x = PC1, y = PC2, color = Localidad)) +
geom_point(size = 3) +
stat_ellipse(level = 0.95) +
theme(
legend.text = element_text(size = 8),
legend.title = element_text(size = 9),
legend.key.size = unit(0.4, "cm"),
legend.box.spacing = unit(0.2, "cm"),
legend.margin = margin(0, 0, 0, 0 )) +
labs(title = "PCA - Agrupación por Localidad",
x = paste("PC1 (", round(summary(PCA)$importance[2,1]*100, 1), "%)"),
y = paste("PC2 (", round(summary(PCA)$importance[2,2]*100, 1), "%)"))
localidades_unicas <- datos_filtrados %>%
group_by(Audio) %>%
summarise(Localidad = first(Localidad))
pca_df_loc <- data.frame(PCA$x, Audio = promedios_audio$Audio) %>%
left_join(localidades_unicas, by = "Audio")
ggplot(pca_df_loc, aes(x = PC1, y = PC2, color = Localidad)) +
geom_point(size = 3) +
stat_ellipse(level = 0.95) +
theme(
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
legend.key.size = unit(0.2, "cm"),
legend.box.spacing = unit(0.1, "cm"),
legend.margin = margin(0, 0, 0, 0 )) +
labs(title = "PCA - Agrupación por Localidad",
x = paste("PC1 (", round(summary(PCA)$importance[2,1]*100, 1), "%)"),
y = paste("PC2 (", round(summary(PCA)$importance[2,2]*100, 1), "%)"))
